//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chatly.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Messages", Namespace="http://schemas.datacontract.org/2004/07/ChatlyServices")]
    [System.SerializableAttribute()]
    public partial class Messages : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessage", ReplyAction="http://tempuri.org/IDataService/GetMessageResponse")]
        Chatly.ServiceReference.Messages GetMessage(int bookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessage", ReplyAction="http://tempuri.org/IDataService/GetMessageResponse")]
        System.Threading.Tasks.Task<Chatly.ServiceReference.Messages> GetMessageAsync(int bookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessagesList", ReplyAction="http://tempuri.org/IDataService/GetMessagesListResponse")]
        Chatly.ServiceReference.Messages[] GetMessagesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessagesList", ReplyAction="http://tempuri.org/IDataService/GetMessagesListResponse")]
        System.Threading.Tasks.Task<Chatly.ServiceReference.Messages[]> GetMessagesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddMessage", ReplyAction="http://tempuri.org/IDataService/AddMessageResponse")]
        void AddMessage(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddMessage", ReplyAction="http://tempuri.org/IDataService/AddMessageResponse")]
        System.Threading.Tasks.Task AddMessageAsync(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateMessage", ReplyAction="http://tempuri.org/IDataService/UpdateMessageResponse")]
        void UpdateMessage(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateMessage", ReplyAction="http://tempuri.org/IDataService/UpdateMessageResponse")]
        System.Threading.Tasks.Task UpdateMessageAsync(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteMessage", ReplyAction="http://tempuri.org/IDataService/DeleteMessageResponse")]
        void DeleteMessage(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteMessage", ReplyAction="http://tempuri.org/IDataService/DeleteMessageResponse")]
        System.Threading.Tasks.Task DeleteMessageAsync(Chatly.ServiceReference.Messages message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : Chatly.ServiceReference.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<Chatly.ServiceReference.IDataService>, Chatly.ServiceReference.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Chatly.ServiceReference.Messages GetMessage(int bookmarkId) {
            return base.Channel.GetMessage(bookmarkId);
        }
        
        public System.Threading.Tasks.Task<Chatly.ServiceReference.Messages> GetMessageAsync(int bookmarkId) {
            return base.Channel.GetMessageAsync(bookmarkId);
        }
        
        public Chatly.ServiceReference.Messages[] GetMessagesList() {
            return base.Channel.GetMessagesList();
        }
        
        public System.Threading.Tasks.Task<Chatly.ServiceReference.Messages[]> GetMessagesListAsync() {
            return base.Channel.GetMessagesListAsync();
        }
        
        public void AddMessage(Chatly.ServiceReference.Messages message) {
            base.Channel.AddMessage(message);
        }
        
        public System.Threading.Tasks.Task AddMessageAsync(Chatly.ServiceReference.Messages message) {
            return base.Channel.AddMessageAsync(message);
        }
        
        public void UpdateMessage(Chatly.ServiceReference.Messages message) {
            base.Channel.UpdateMessage(message);
        }
        
        public System.Threading.Tasks.Task UpdateMessageAsync(Chatly.ServiceReference.Messages message) {
            return base.Channel.UpdateMessageAsync(message);
        }
        
        public void DeleteMessage(Chatly.ServiceReference.Messages message) {
            base.Channel.DeleteMessage(message);
        }
        
        public System.Threading.Tasks.Task DeleteMessageAsync(Chatly.ServiceReference.Messages message) {
            return base.Channel.DeleteMessageAsync(message);
        }
    }
}
