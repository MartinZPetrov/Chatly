//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chatly.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Messages", Namespace="http://schemas.datacontract.org/2004/07/ChatlyServices", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Messages : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chatly.ServiceReference.Codes CodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PinIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chatly.ServiceReference.Users UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chatly.ServiceReference.Codes Codes {
            get {
                return this.CodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CodesField, value) != true)) {
                    this.CodesField = value;
                    this.RaisePropertyChanged("Codes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PinId {
            get {
                return this.PinIdField;
            }
            set {
                if ((this.PinIdField.Equals(value) != true)) {
                    this.PinIdField = value;
                    this.RaisePropertyChanged("PinId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chatly.ServiceReference.Users Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Codes", Namespace="http://schemas.datacontract.org/2004/07/ChatlyServices", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Codes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chatly.ServiceReference.Messages[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chatly.ServiceReference.Messages[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PinCode {
            get {
                return this.PinCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PinCodeField, value) != true)) {
                    this.PinCodeField = value;
                    this.RaisePropertyChanged("PinCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/ChatlyServices", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Users : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chatly.ServiceReference.Messages[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PasswordSaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chatly.ServiceReference.Messages[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PasswordSalt {
            get {
                return this.PasswordSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordSaltField, value) != true)) {
                    this.PasswordSaltField = value;
                    this.RaisePropertyChanged("PasswordSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IDataService")]
    public interface IDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessage", ReplyAction="http://tempuri.org/IDataService/GetMessageResponse")]
        Chatly.ServiceReference.Messages GetMessage(int bookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessage", ReplyAction="http://tempuri.org/IDataService/GetMessageResponse")]
        System.Threading.Tasks.Task<Chatly.ServiceReference.Messages> GetMessageAsync(int bookmarkId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessagesList", ReplyAction="http://tempuri.org/IDataService/GetMessagesListResponse")]
        Chatly.ServiceReference.Messages[] GetMessagesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetMessagesList", ReplyAction="http://tempuri.org/IDataService/GetMessagesListResponse")]
        System.Threading.Tasks.Task<Chatly.ServiceReference.Messages[]> GetMessagesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddMessage", ReplyAction="http://tempuri.org/IDataService/AddMessageResponse")]
        void AddMessage(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddMessage", ReplyAction="http://tempuri.org/IDataService/AddMessageResponse")]
        System.Threading.Tasks.Task AddMessageAsync(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateMessage", ReplyAction="http://tempuri.org/IDataService/UpdateMessageResponse")]
        void UpdateMessage(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateMessage", ReplyAction="http://tempuri.org/IDataService/UpdateMessageResponse")]
        System.Threading.Tasks.Task UpdateMessageAsync(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteMessage", ReplyAction="http://tempuri.org/IDataService/DeleteMessageResponse")]
        void DeleteMessage(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteMessage", ReplyAction="http://tempuri.org/IDataService/DeleteMessageResponse")]
        System.Threading.Tasks.Task DeleteMessageAsync(Chatly.ServiceReference.Messages message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCode", ReplyAction="http://tempuri.org/IDataService/GetCodeResponse")]
        Chatly.ServiceReference.Codes GetCode(int codeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCode", ReplyAction="http://tempuri.org/IDataService/GetCodeResponse")]
        System.Threading.Tasks.Task<Chatly.ServiceReference.Codes> GetCodeAsync(int codeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCodesList", ReplyAction="http://tempuri.org/IDataService/GetCodesListResponse")]
        Chatly.ServiceReference.Codes[] GetCodesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetCodesList", ReplyAction="http://tempuri.org/IDataService/GetCodesListResponse")]
        System.Threading.Tasks.Task<Chatly.ServiceReference.Codes[]> GetCodesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddCode", ReplyAction="http://tempuri.org/IDataService/AddCodeResponse")]
        void AddCode(Chatly.ServiceReference.Codes code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/AddCode", ReplyAction="http://tempuri.org/IDataService/AddCodeResponse")]
        System.Threading.Tasks.Task AddCodeAsync(Chatly.ServiceReference.Codes code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateCode", ReplyAction="http://tempuri.org/IDataService/UpdateCodeResponse")]
        void UpdateCode(Chatly.ServiceReference.Codes code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UpdateCode", ReplyAction="http://tempuri.org/IDataService/UpdateCodeResponse")]
        System.Threading.Tasks.Task UpdateCodeAsync(Chatly.ServiceReference.Codes code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteCode", ReplyAction="http://tempuri.org/IDataService/DeleteCodeResponse")]
        void DeleteCode(Chatly.ServiceReference.Codes code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/DeleteCode", ReplyAction="http://tempuri.org/IDataService/DeleteCodeResponse")]
        System.Threading.Tasks.Task DeleteCodeAsync(Chatly.ServiceReference.Codes code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/Login", ReplyAction="http://tempuri.org/IDataService/LoginResponse")]
        Chatly.ServiceReference.Users Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/Login", ReplyAction="http://tempuri.org/IDataService/LoginResponse")]
        System.Threading.Tasks.Task<Chatly.ServiceReference.Users> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/Create", ReplyAction="http://tempuri.org/IDataService/CreateResponse")]
        Chatly.ServiceReference.Users Create(Chatly.ServiceReference.Users user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/Create", ReplyAction="http://tempuri.org/IDataService/CreateResponse")]
        System.Threading.Tasks.Task<Chatly.ServiceReference.Users> CreateAsync(Chatly.ServiceReference.Users user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/Delete", ReplyAction="http://tempuri.org/IDataService/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/Delete", ReplyAction="http://tempuri.org/IDataService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UserExists", ReplyAction="http://tempuri.org/IDataService/UserExistsResponse")]
        bool UserExists(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/UserExists", ReplyAction="http://tempuri.org/IDataService/UserExistsResponse")]
        System.Threading.Tasks.Task<bool> UserExistsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetUsersList", ReplyAction="http://tempuri.org/IDataService/GetUsersListResponse")]
        Chatly.ServiceReference.Users[] GetUsersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataService/GetUsersList", ReplyAction="http://tempuri.org/IDataService/GetUsersListResponse")]
        System.Threading.Tasks.Task<Chatly.ServiceReference.Users[]> GetUsersListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceChannel : Chatly.ServiceReference.IDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceClient : System.ServiceModel.ClientBase<Chatly.ServiceReference.IDataService>, Chatly.ServiceReference.IDataService {
        
        public DataServiceClient() {
        }
        
        public DataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Chatly.ServiceReference.Messages GetMessage(int bookmarkId) {
            return base.Channel.GetMessage(bookmarkId);
        }
        
        public System.Threading.Tasks.Task<Chatly.ServiceReference.Messages> GetMessageAsync(int bookmarkId) {
            return base.Channel.GetMessageAsync(bookmarkId);
        }
        
        public Chatly.ServiceReference.Messages[] GetMessagesList() {
            return base.Channel.GetMessagesList();
        }
        
        public System.Threading.Tasks.Task<Chatly.ServiceReference.Messages[]> GetMessagesListAsync() {
            return base.Channel.GetMessagesListAsync();
        }
        
        public void AddMessage(Chatly.ServiceReference.Messages message) {
            base.Channel.AddMessage(message);
        }
        
        public System.Threading.Tasks.Task AddMessageAsync(Chatly.ServiceReference.Messages message) {
            return base.Channel.AddMessageAsync(message);
        }
        
        public void UpdateMessage(Chatly.ServiceReference.Messages message) {
            base.Channel.UpdateMessage(message);
        }
        
        public System.Threading.Tasks.Task UpdateMessageAsync(Chatly.ServiceReference.Messages message) {
            return base.Channel.UpdateMessageAsync(message);
        }
        
        public void DeleteMessage(Chatly.ServiceReference.Messages message) {
            base.Channel.DeleteMessage(message);
        }
        
        public System.Threading.Tasks.Task DeleteMessageAsync(Chatly.ServiceReference.Messages message) {
            return base.Channel.DeleteMessageAsync(message);
        }
        
        public Chatly.ServiceReference.Codes GetCode(int codeId) {
            return base.Channel.GetCode(codeId);
        }
        
        public System.Threading.Tasks.Task<Chatly.ServiceReference.Codes> GetCodeAsync(int codeId) {
            return base.Channel.GetCodeAsync(codeId);
        }
        
        public Chatly.ServiceReference.Codes[] GetCodesList() {
            return base.Channel.GetCodesList();
        }
        
        public System.Threading.Tasks.Task<Chatly.ServiceReference.Codes[]> GetCodesListAsync() {
            return base.Channel.GetCodesListAsync();
        }
        
        public void AddCode(Chatly.ServiceReference.Codes code) {
            base.Channel.AddCode(code);
        }
        
        public System.Threading.Tasks.Task AddCodeAsync(Chatly.ServiceReference.Codes code) {
            return base.Channel.AddCodeAsync(code);
        }
        
        public void UpdateCode(Chatly.ServiceReference.Codes code) {
            base.Channel.UpdateCode(code);
        }
        
        public System.Threading.Tasks.Task UpdateCodeAsync(Chatly.ServiceReference.Codes code) {
            return base.Channel.UpdateCodeAsync(code);
        }
        
        public void DeleteCode(Chatly.ServiceReference.Codes code) {
            base.Channel.DeleteCode(code);
        }
        
        public System.Threading.Tasks.Task DeleteCodeAsync(Chatly.ServiceReference.Codes code) {
            return base.Channel.DeleteCodeAsync(code);
        }
        
        public Chatly.ServiceReference.Users Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<Chatly.ServiceReference.Users> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public Chatly.ServiceReference.Users Create(Chatly.ServiceReference.Users user, string password) {
            return base.Channel.Create(user, password);
        }
        
        public System.Threading.Tasks.Task<Chatly.ServiceReference.Users> CreateAsync(Chatly.ServiceReference.Users user, string password) {
            return base.Channel.CreateAsync(user, password);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public bool UserExists(int userId) {
            return base.Channel.UserExists(userId);
        }
        
        public System.Threading.Tasks.Task<bool> UserExistsAsync(int userId) {
            return base.Channel.UserExistsAsync(userId);
        }
        
        public Chatly.ServiceReference.Users[] GetUsersList() {
            return base.Channel.GetUsersList();
        }
        
        public System.Threading.Tasks.Task<Chatly.ServiceReference.Users[]> GetUsersListAsync() {
            return base.Channel.GetUsersListAsync();
        }
    }
}
